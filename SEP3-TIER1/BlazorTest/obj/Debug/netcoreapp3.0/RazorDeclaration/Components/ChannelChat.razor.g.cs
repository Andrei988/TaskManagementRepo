#pragma checksum "D:\VIA\SEM3\SEP3\repo\SEP3-TIER1\BlazorTest\Components\ChannelChat.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4ff75e98493f2b96c9c5d45aaa1a6224345849cf"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorTest.Components
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\VIA\SEM3\SEP3\repo\SEP3-TIER1\BlazorTest\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\VIA\SEM3\SEP3\repo\SEP3-TIER1\BlazorTest\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\VIA\SEM3\SEP3\repo\SEP3-TIER1\BlazorTest\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\VIA\SEM3\SEP3\repo\SEP3-TIER1\BlazorTest\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\VIA\SEM3\SEP3\repo\SEP3-TIER1\BlazorTest\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\VIA\SEM3\SEP3\repo\SEP3-TIER1\BlazorTest\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\VIA\SEM3\SEP3\repo\SEP3-TIER1\BlazorTest\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\VIA\SEM3\SEP3\repo\SEP3-TIER1\BlazorTest\_Imports.razor"
using BlazorTest;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\VIA\SEM3\SEP3\repo\SEP3-TIER1\BlazorTest\_Imports.razor"
using BlazorTest.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\VIA\SEM3\SEP3\repo\SEP3-TIER1\BlazorTest\_Imports.razor"
using Blazored.Modal;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\VIA\SEM3\SEP3\repo\SEP3-TIER1\BlazorTest\_Imports.razor"
using Blazored.Modal.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\VIA\SEM3\SEP3\repo\SEP3-TIER1\BlazorTest\Components\ChannelChat.razor"
using BlazorTest.Controllers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\VIA\SEM3\SEP3\repo\SEP3-TIER1\BlazorTest\Components\ChannelChat.razor"
using BlazorTest.Model;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\VIA\SEM3\SEP3\repo\SEP3-TIER1\BlazorTest\Components\ChannelChat.razor"
using BlazorTest.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\VIA\SEM3\SEP3\repo\SEP3-TIER1\BlazorTest\Components\ChannelChat.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\VIA\SEM3\SEP3\repo\SEP3-TIER1\BlazorTest\Components\ChannelChat.razor"
using Task = System.Threading.Tasks.Task;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/chat")]
    public partial class ChannelChat : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 109 "D:\VIA\SEM3\SEP3\repo\SEP3-TIER1\BlazorTest\Components\ChannelChat.razor"
       

    [Parameter]
    public string Admin { get; set; }

    [Parameter]
    public int ChannelId { get; set; }

    [Parameter]
    public string ChannelTitle { get; set; }

    private List<ChannelUser> ChannelUsers { get; set; }
    private List<CMessage> Messages { get; set; }

    public string MessageContent { get; set; }

    public string InitJsonMessage { get; set; }
    public Message InitMessage { get; set; }

    public string InviteUsername { get; set; }

    public async Task<string> KickUser(string Username)
    {
        try
        {
            var user = ChannelUsers.SingleOrDefault(x => x.Username == Username && x.ChannelId == ChannelId);
            ChannelUsers.Remove(user);
            return await controller.DeleteFromChannel(AsyncClient, ChannelId, Username);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
        
    }

    public async Task<string> AddUser()
    {
        try
        {
            ChannelUsers.Add(new ChannelUser{
                Username = InviteUsername,
                ChannelId = ChannelId
            });
            return await controller.AddToChannel(AsyncClient, ChannelId, InviteUsername);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }

        
    }

    public async Task SendMessage(string content)
    {
        try
        {
            Messages.Add(new CMessage{
                Sender = appData.Username,
                TimeSent = DateTime.Now,
                Content = content
            });

            MessageContent = "";

            await controller.SendMessage(AsyncClient, ChannelId, appData.Username, Messages[Messages.Count - 1].Content);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
        
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            InitJsonMessage = await controller.InitChat(AsyncClient, ChannelId);
            await base.OnInitializedAsync();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }

    }

    protected override async Task OnParametersSetAsync()
    {

        try
        {
            InitMessage = JsonConvert.DeserializeObject<Message>(InitJsonMessage);
            ChannelUsers = InitMessage.Fields.ChannelUsers as List<ChannelUser>;
            Messages = InitMessage.Fields.ChannelMessages;
            await base.OnInitializedAsync();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }

        
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AppData appData { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ChannelChatController controller { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Networking.AsyncClient AsyncClient { get; set; }
    }
}
#pragma warning restore 1591
